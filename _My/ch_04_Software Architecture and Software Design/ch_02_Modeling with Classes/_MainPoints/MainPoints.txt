

========================================
1.Why use a standard modeling language?
========================================
#b1 --> 197
#q\a

==========================================
2.Essentials Component of UML class diagrams
==========================================
#b1 --> 199
#q\a

==========================================
3.class diagram : 
  - how to represent class in uml
==========================================
#b1 --> 200
#q\a


==========================================
4.- what is Associations and multiplicity
  - how to represent Associations and multiplicity in uml
  - Labeling associations : 
      - types of labels
      - how to make An association name
      - If you omit both the association name and role names, then consider that an
        association’s name is
      - (Analyzing and validating associations ) 
        A good rules of thumb when performing Associations analysis are
  - the most common patterns of multiplicity
      - one to many : 
            one company can has many employees
            every employee can work only for one company
      - many to many :
            one facebook user can join many groups
            every facebook group can has many users
      - one to one
   - Association classes ( many to many class )
   - Directionality in associations
   - types of Associations :
        -  aggregations
        -  composition
        -  aggregations to be drawn as a hierarchy
==========================================
#b1 --> 200
#q\a

==========================================
5.Generalization
  - how to represent the Generalization in uml
  - the issues to consider when creating generalizations
       - Avoiding unnecessary generalizations
       - Handling multiple generalization sets 
             - a levels of generalization solution and why it failed?
             - multiple inheritance solution and why it failed ?
             - player–role pattern solution 
==========================================
#b1 --> 209
#q\a

==========================================
6.Object diagrams :
  - what is Object diagrams ?
  - how to represent them in uml ?
==========================================
#b1 --> 213
#q\a

==========================================
7.Interfaces
  - what are Interfaces ?
  - how to represent them in uml ? 
  - interfaces vs generalizations.
  - A key advantage of using interfaces
==========================================
#b1 --> 218
#q\a


==========================================
8.The process of developing class diagrams :
  - Types of models
  - Independently Between system domain Model and System model
==========================================
#b1 --> 226
#q\a


==========================================
9.Desirable Characteristics of a Design
==========================================
#b2 --> 80
#resources : 
1- https://guifroes.com/clever-code-is-bad/
==========================================
10.Levels of Design
==========================================
#b2 --> 82

==========================================
11.Level 1: Software System
==========================================
#b2 --> 82

==========================================
12.Level 2: Division into Subsystems or Packages
  - The major goals from this activity
  - good vs bad subsystems
  - how to make the connections easy to understand and maintain
==========================================
#b2 --> 82

==========================================
13.
==========================================